name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
      - 'feature/*'
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Grant execute permission
        run: chmod +x ./gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run tests with coverage
        run: ./gradlew clean test jacocoTestReport jacocoTestCoverageVerification

      - name: Show coverage summary
        run: |
          echo "=== Jacoco Coverage Summary ==="
          grep -A 3 '<counter type="LINE"' build/reports/jacoco/test/jacocoTestReport.xml || true

      ##TODO : Î¶¨Ìè¨Ìä∏ ÏûëÏÑ±

      - name: Set BUILD_ENV
        run: |
          case "${GITHUB_REF_NAME}" in
          main)
            echo "BUILD_ENV=prod" >> $GITHUB_ENV
            ;;
          dev)
            echo "BUILD_ENV=dev" >> $GITHUB_ENV
            ;;
          feature/*)
            echo "BUILD_ENV=feature" >> $GITHUB_ENV
            ;;
          *)
            echo "BUILD_ENV=other" >> $GITHUB_ENV
            ;;
          esac

      - name: Build JAR
        if: github.ref_name == 'main' || github.ref_name == 'dev'
        run: ./gradlew build

      - name: Build & Push Docker Image with Jib
        if: github.ref_name == 'main'
        env:
          DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: ./gradlew jib

  cd:
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref_name == 'main'
    steps:
      - name: Deploy to Synology NAS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "üõ∞Ô∏è  Î∞∞Ìè¨ ÏãúÏûë..."
            docker pull ${{ secrets.DOCKER_REGISTRY_URL }}/wedsnap:${BUILD_ENV}
            docker stop wedsnap || true
            docker rm wedsnap || true
            docker run -d --name wedsnap \
              -p 8080:8080 \
              ${{ secrets.DOCKER_REGISTRY_URL }}/wedsnap:${BUILD_ENV}
            echo "‚úÖ Î∞∞Ìè¨ ÏôÑÎ£å!"
